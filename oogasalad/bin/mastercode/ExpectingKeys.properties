# Properties file to define keys to expect and their types
# WARNING: THERE CANNOT BE REPEATED NAMES FOR DIFFERENT ITEMS
# 
#
#

# define the split pattern
SplitPattern=;;

# the uppermost level items we're expecting
SubObjectNames=Tiles;;Maps;;Objects;;GameTimeObject;;General

# the next level items are arguments in the constructors of the objects
# for example: the constructors of GameObject has arguments name, type, x, y, and uniqueid
# WARNING: THERE CANNOT BE REPEATED NAMES FOR DIFFERENT ITEMS
# WARNING: THE ORDER OF MUST BE THE SAME AS THE CONSTRUCTOR OF THESE OBJECTS

# note: for isUnique: won't be in the json file, and the pre-determined value is set in the next section
Objects=name;;isUnique;;x;;y;;cid;;imagepath;;type;;uniqueid;;propertyInputMap;;propertyImplementationMap;;map
Tiles=uniqueid;;name;;imagepath;;Walkable
Maps=uniqueid;;name;;map;;subscription;;code
GameTimeObject=Length of Season;;Length of Day;;Season On;;Time On
General=Game Name;;Instructions;;Fight Background

# the next level: if it's the deepest level, define the expecting argument type

name=String
isUnique=FixedVal;;true
x=double
y=double
#for cid: looks up DataConstants
cid=AssignCID
imagepath=ToMediaTable
Fight\ Background=ToMediaTable
type=String
uniqueid=String
propertyInputMap=AbilityProcessing
propertyImplementationMap=AbilityProcessing
Walkable=boolean

# the string representation of the map
map=String

Length\ of\ Season=double
Length\ of\ Day=double
Season\ On=boolean
Time\ On=boolean

subscription=boolean
code=String

Game\ Name=String
Instructions=String
